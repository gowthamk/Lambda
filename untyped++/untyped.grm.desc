
state 0:

	start : . prog 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9
	VAL	shift 8

	start	goto 40
	prog	goto 7
	topdecls	goto 6
	topdecl	goto 5
	decl	goto 4
	expr	goto 3
	app_term	goto 2
	atom	goto 1

	.	error


state 1:

	app_term : atom .  (reduce by rule 12)



	.	reduce by rule 12


state 2:

	expr : app_term .  (reduce by rule 11)
	app_term : app_term . atom 

	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	ZERO	shift 12

	atom	goto 19

	.	reduce by rule 11


state 3:

	prog : expr .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	topdecl : decl .  (reduce by rule 4)



	.	reduce by rule 4


state 5:

	topdecls : topdecl . SEMICOLON topdecls 

	SEMICOLON	shift 20


	.	error


state 6:

	prog : topdecls . SEMICOLON expr 

	SEMICOLON	shift 21


	.	error


state 7:

	start : prog .  (reduce by rule 0)



	.	reduce by rule 0


state 8:

	decl : VAL . VAR EQUALOP expr 

	VAR	shift 22


	.	error


state 9:

	expr : ISZERO . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 23
	app_term	goto 2
	atom	goto 1

	.	error


state 10:

	expr : PRED . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 24
	app_term	goto 2
	atom	goto 1

	.	error


state 11:

	expr : SUCC . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 25
	app_term	goto 2
	atom	goto 1

	.	error


state 12:

	atom : ZERO .  (reduce by rule 18)



	.	reduce by rule 18


state 13:

	expr : IF . expr THEN expr ELSE expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 26
	app_term	goto 2
	atom	goto 1

	.	error


state 14:

	atom : FALSE .  (reduce by rule 17)



	.	reduce by rule 17


state 15:

	atom : TRUE .  (reduce by rule 16)



	.	reduce by rule 16


state 16:

	atom : VAR .  (reduce by rule 14)



	.	reduce by rule 14


state 17:

	atom : LPAREN . expr RPAREN 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 27
	app_term	goto 2
	atom	goto 1

	.	error


state 18:

	expr : LAM . VAR DOT expr 

	VAR	shift 28


	.	error


state 19:

	app_term : app_term atom .  (reduce by rule 13)



	.	reduce by rule 13


state 20:

	topdecls : topdecl SEMICOLON . topdecls 

	VAL	shift 8

	topdecls	goto 29
	topdecl	goto 5
	decl	goto 4

	.	error


state 21:

	prog : topdecls SEMICOLON . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 30
	app_term	goto 2
	atom	goto 1

	.	error


state 22:

	decl : VAL VAR . EQUALOP expr 

	EQUALOP	shift 31


	.	error


state 23:

	expr : ISZERO expr .  (reduce by rule 10)



	.	reduce by rule 10


state 24:

	expr : PRED expr .  (reduce by rule 9)



	.	reduce by rule 9


state 25:

	expr : SUCC expr .  (reduce by rule 8)



	.	reduce by rule 8


state 26:

	expr : IF expr . THEN expr ELSE expr 

	THEN	shift 32


	.	error


state 27:

	atom : LPAREN expr . RPAREN 

	RPAREN	shift 33


	.	error


state 28:

	expr : LAM VAR . DOT expr 

	DOT	shift 34


	.	error


state 29:

	topdecls : topdecl SEMICOLON topdecls .  (reduce by rule 3)



	.	reduce by rule 3


state 30:

	prog : topdecls SEMICOLON expr .  (reduce by rule 1)



	.	reduce by rule 1


state 31:

	decl : VAL VAR EQUALOP . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 35
	app_term	goto 2
	atom	goto 1

	.	error


state 32:

	expr : IF expr THEN . expr ELSE expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 36
	app_term	goto 2
	atom	goto 1

	.	error


state 33:

	atom : LPAREN expr RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 34:

	expr : LAM VAR DOT . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 37
	app_term	goto 2
	atom	goto 1

	.	error


state 35:

	decl : VAL VAR EQUALOP expr .  (reduce by rule 5)



	.	reduce by rule 5


state 36:

	expr : IF expr THEN expr . ELSE expr 

	ELSE	shift 38


	.	error


state 37:

	expr : LAM VAR DOT expr .  (reduce by rule 6)



	.	reduce by rule 6


state 38:

	expr : IF expr THEN expr ELSE . expr 

	LAM	shift 18
	LPAREN	shift 17
	VAR	shift 16
	TRUE	shift 15
	FALSE	shift 14
	IF	shift 13
	ZERO	shift 12
	SUCC	shift 11
	PRED	shift 10
	ISZERO	shift 9

	expr	goto 39
	app_term	goto 2
	atom	goto 1

	.	error


state 39:

	expr : IF expr THEN expr ELSE expr .  (reduce by rule 7)



	.	reduce by rule 7


state 40:


	EOF	accept


	.	error

37 of 168 action table entries left after compaction
42 goto table entries
